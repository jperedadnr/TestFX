/*
 * Copyright 2013-2014 SmartBear Software
 * Copyright 2014-2015 The TestFX Contributors
 *
 * Licensed under the EUPL, Version 1.1 or - as soon they will be approved by the
 * European Commission - subsequent versions of the EUPL (the "Licence"); You may
 * not use this work except in compliance with the Licence.
 *
 * You may obtain a copy of the Licence at:
 * http://ec.europa.eu/idabc/eupl
 *
 * Unless required by applicable law or agreed to in writing, software distributed
 * under the Licence is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the Licence for the
 * specific language governing permissions and limitations under the Licence.
 */

apply plugin: 'org.openjfx.javafxplugin'

ext.pomName = 'TestFX Spock'
ext.pomDescription = 'TestFX Spock library'
ext.moduleName = 'org.testfx.spock'
ext.openjfxVersion = '23.0.1'
ext.headlessSDKPath = System.getenv("JAVAFX_HOME")

apply plugin: 'groovy'
//apply plugin: 'codenarc'

repositories {
    mavenCentral()
}

groovydoc {
    noTimestamp = true
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
    archiveBaseName.set('testfx-spock')
    archiveClassifier.set('groovydoc')
    from groovydoc.destinationDir
}

//codenarc {
//    toolVersion = "1.0"
//    reportFormat = 'console'
//}

//codenarcMain {
//    configFile = file("${rootDir}/gradle/codenarc/rules.groovy")
//    maxPriority1Violations 0
//    maxPriority2Violations 10
//    maxPriority3Violations 20
//}
//
//codenarcTest {
//    configFile = file("${rootDir}/gradle/codenarc/rules.groovy")
//    maxPriority1Violations 0
//    maxPriority2Violations 10
//    maxPriority3Violations 20
//}

artifacts {
    archives groovydocJar
}

javafx {
    sdk = headlessSDKPath
    version = openjfxVersion
    modules = [ 'javafx.controls' ]
}

dependencies {
    implementation project(":testfx-core")

    compileOnly 'org.spockframework:spock-core:2.4-M4-groovy-4.0'
    testCompileOnly 'org.spockframework:spock-core:2.4-M4-groovy-4.0'
}

test {
    systemProperty 'testfx.headless', System.getProperty('testfx.headless', "false")
    systemProperty 'testfx.verbose', System.getProperty('testfx.verbose', "false")
}